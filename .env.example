# =============================================================================
# Telehealth Transcription Pipeline Environment Configuration
# =============================================================================

# Environment Configuration
# PROJECT: "official" for staging environments, empty for production
# ENVIRONMENT: staging, production, dev, test, etc.
# DOMAIN_BASE: localhost, yourdomain.com, etc.
PROJECT=official
ENVIRONMENT=production
DOMAIN_BASE=localhost

# Docker Network Configuration
DOCKER_NETWORK=frontend-${PROJECT:+${PROJECT}-}${ENVIRONMENT:-production}  # The Docker network all services connect to

# =============================================================================
# Container Names (Auto-generated from above variables)
# =============================================================================
# These follow your naming convention:
# For staging: official-staging-{service}-{component}
# For production: production-{service}-{component} (no PROJECT prefix)

# Telesalud Integration
TELESALUD_CONTAINER=${PROJECT:+${PROJECT}-}${ENVIRONMENT}-telehealth-web-1
TELESALUD_API_BASE_URL=http://${TELESALUD_CONTAINER}
TELESALUD_API_TOKEN=your-sanctum-api-token-here
TELESALUD_API_URL=http://${TELESALUD_CONTAINER}/videoconsultation/evolution
TELESALUD_WEBHOOK_URL=http://${TELESALUD_CONTAINER}/api/webhook/evolution
USE_WEBHOOK=true

# AI/ML Services
PARAKEET_CONTAINER=${PROJECT:+${PROJECT}-}${ENVIRONMENT}-parakeet-asr-parakeet-asr
OLLAMA_CONTAINER=${PROJECT:+${PROJECT}-}${ENVIRONMENT}-ollama-llm

# EMR Integration
OPENEMR_CONTAINER=${PROJECT:+${PROJECT}-}${ENVIRONMENT}-openemr-1
OPENEMR_API_KEY=your-openemr-api-key-here

# Jitsi Services (different naming pattern)
PROSODY_CONTAINER=jitsi-docker-prosody-1
JITSI_WEB_CONTAINER=jitsi-docker-web-1

# =============================================================================
# Pipeline Integration Mode
# =============================================================================
INTEGRATION_MODE=dual
# Options:
# - jitsi: Pipeline runs automatically when Jitsi recording completes
# - webhook: Pipeline waits for webhook triggers from telesalud
# - dual: Supports both methods (default - recommended for flexibility)

# =============================================================================
# Webhook Configuration
# =============================================================================
WEBHOOK_TOKEN=your-secure-webhook-token-here
WEBHOOK_PORT=9090
WEBHOOK_HOST=0.0.0.0

# =============================================================================
# Audio Processing Configuration
# =============================================================================
AUDIO_PROCESSING_MODE=auto
# Options:
# - auto: Try MKA first, fall back to WAV if needed (recommended)
# - mka_only: Only send MKA files (fails if Parakeet doesn't support)
# - wav_only: Always convert to WAV first (original behavior)

# =============================================================================
# AI Model Configuration
# =============================================================================
OLLAMA_MODEL=gpt-oss:20b

# =============================================================================
# GPU Configuration (remove CUDA_VISIBLE_DEVICES for CPU-only)
# =============================================================================
CUDA_VISIBLE_DEVICES=0

# =============================================================================
# Example Resulting URLs (for reference)
# =============================================================================
# With the above settings, your services would be accessible at:
#
# Frontend URLs (via NPM):
# - Jitsi Meet: vcbknd-staging.localhost
# - Parakeet API: asr-staging.localhost  
# - Ollama LLM: llm-staging.localhost
# - Telesalud: vc-staging.localhost
# - OpenEMR: staging-notes.localhost
# - Pipeline Webhook: webhook-staging.localhost
#
# Container Names:
# - Pipeline: official-staging-transcription-pipeline
# - Telesalud: official-staging-telehealth-web-1
# - Parakeet: official-staging-parakeet-asr-parakeet-asr
# - Ollama: official-staging-ollama-llm
# - OpenEMR: official-staging-openemr-1
# - Prosody: jitsi-docker-prosody-1
# - Jitsi Web: jitsi-docker-web-1
#
# =============================================================================